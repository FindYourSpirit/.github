on:
  push:
    branches:
      - 'main'
      - 'master'
  schedule:
    - cron: "0 0 * * *"

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Fetch latest release for fys-sdk-nodejs
      - name: Fetch latest release for fys-sdk-nodejs
        id: nodejs
        uses: actions/github-script@v4
        with:
          script: |
            const releases = await github.repos.listReleases({
              owner: 'FindYourSpirit',
              repo: 'fys-sdk-nodejs'
            });
            
            const latestRelease = releases.data[0]; // Assuming the latest release is at index 0
            
            if (latestRelease) {
              const releaseTag = latestRelease.tag_name;
              const releaseDate = latestRelease.published_at;
              return { tag: releaseTag, date: releaseDate };
            } else {
              return { tag: 'No releases found', date: 'N/A' };
            }

      # Fetch latest release for fys-sdk-php
      - name: Fetch latest release for fys-sdk-php
        id: php
        uses: actions/github-script@v4
        with:
          script: |
            const response = await github.repos.getLatestRelease({
              owner: 'FindYourSpirit',
              repo: 'fys-sdk-php'
            });
            
            const latestRelease = releases.data[0]; // Assuming the latest release is at index 0
            
            if (latestRelease) {
              const releaseTag = latestRelease.tag_name;
              const releaseDate = latestRelease.published_at;
              return { tag: releaseTag, date: releaseDate };
            } else {
              return { tag: 'No releases found', date: 'N/A' };
            }

      # Fetch latest release for fys-sdk-py
      - name: Fetch latest release for fys-sdk-py
        id: py
        uses: actions/github-script@v4
        with:
          script: |
            const response = await github.repos.getLatestRelease({
              owner: 'FindYourSpirit',
              repo: 'fys-sdk-py'
            });
            
            const latestRelease = releases.data[0]; // Assuming the latest release is at index 0
            
            if (latestRelease) {
              const releaseTag = latestRelease.tag_name;
              const releaseDate = latestRelease.published_at;
              return { tag: releaseTag, date: releaseDate };
            } else {
              return { tag: 'No releases found', date: 'N/A' };
            }

      # Fetch latest release for fys-sdk
      - name: Fetch latest release for fys-sdk
        id: dotnet
        uses: actions/github-script@v4
        with:
          script: |
            const response = await github.repos.getLatestRelease({
              owner: 'FindYourSpirit',
              repo: 'fys-sdk'
            });

            const latestRelease = releases.data[0]; // Assuming the latest release is at index 0
            
            if (latestRelease) {
              const releaseTag = latestRelease.tag_name;
              const releaseDate = latestRelease.published_at;
              return { tag: releaseTag, date: releaseDate };
            } else {
              return { tag: 'No releases found', date: 'N/A' };
            }

      - name: Update README.md
        run: |
          npm install markdown-table --global
          npm install fs-extra --global
          npm install path --global

          const releases = [];

          const getLatestRelease = async (repoName, repoUrl) => {
            try {
              const response = await github.repos.getLatestRelease({
                owner: 'FindYourSpirit',
                repo: repoName
              });
              const releaseTag = response.data.tag_name;
              const releaseDate = response.data.published_at;

              releases.push({
                repo: repoName,
                tag: releaseTag,
                date: releaseDate,
                url: repoUrl
              });
            } catch (error) {
              console.error(`Error fetching latest release for ${repoName}:`, error);
            }
          };

          const fetchLatestReleases = async () => {
            await getLatestRelease('fys-sdk-nodejs', 'https://github.com/FindYourSpirit/fys-sdk-nodejs');
            await getLatestRelease('fys-sdk-php', 'https://github.com/FindYourSpirit/fys-sdk-php');
            await getLatestRelease('fys-sdk-py', 'https://github.com/FindYourSpirit/fys-sdk-py');
            await getLatestRelease('fys-sdk', 'https://github.com/FindYourSpirit/fys-sdk');
          };

          await fetchLatestReleases();

          const markdownTable = require('markdown-table');
          const fs = require('fs-extra');
          const path = require('path');

          const tableData = [
            ['SDK', 'Platform / Ecosystem', 'GitHub Repository', 'Package Hosting', 'Latest Release']
          ];

          const createRow = (repoName, platform, repoUrl, packageHosting, latestRelease) => {
            const row = [repoName, platform, repoUrl, packageHosting, latestRelease];
            tableData.push(row);
          };

          const addTableRow = (repo, platform, repoUrl, packageHosting) => {
            const release = releases.find((r) => r.repo === repo);

            if (release) {
              createRow(repo, platform, repoUrl, packageHosting, `[${release.tag}](${release.url})`);
            } else {
              createRow(repo, platform, repoUrl, packageHosting, 'No releases found');
            }
          };

          addTableRow('fys-sdk-nodejs', 'Node.js', 'https://github.com/FindYourSpirit/fys-sdk-nodejs', 'https://www.npmjs.com/package/fys-sdk-nodejs');
          addTableRow('fys-sdk-php', 'PHP', 'https://github.com/FindYourSpirit/fys-sdk-php', 'https://packagist.org/packages/findyourspirit/fys-sdk-php');
          addTableRow('fys-sdk-py', 'Python', 'https://github.com/FindYourSpirit/fys-sdk-py', 'https://pypi.org/project/fys-sdk-py');
          addTableRow('fys-sdk', '.NET', 'https://github.com/FindYourSpirit/fys-sdk', 'https://www.nuget.org/packages/fys-sdk');

          const md = markdownTable(tableData);

          const readmePath = path.resolve(__dirname, 'profile/README.md');
          let readmeContent = fs.readFileSync(readmePath, 'utf8');

          // Update the table in README.md
          const tableStartMarker = '<!-- SDK Table Start -->';
          const tableEndMarker = '<!-- SDK Table End -->';
          const tableRegex = new RegExp(`${tableStartMarker}[\\s\\S]*${tableEndMarker}`);
          const updatedReadmeContent = readmeContent.replace(tableRegex, `${tableStartMarker}\n${md}\n${tableEndMarker}`);

          fs.writeFileSync(readmePath, updatedReadmeContent);

          console.log('README.md updated successfully.');

